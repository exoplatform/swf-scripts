name: CI Build
on:
  workflow_call:
    inputs:
      maven_version:
        description: Maven version
        default: "3.9.5"
        required: false
        type: string
      maven_profiles:
        description: Maven Profiles
        default: "exo-release"
        required: false
        type: string
      extra_maven_opts:
        description: Extra Maven OPTS
        default: ""
        required: false
        type: string
      jdk_major_version:
        description: JDK Major version (eg 8, 11, 14, 17, 21,...)
        default: 17
        required: false
        type: number
      jdk_distribution:
        description: OpenJDK Adopted Distribution (temurin, zulu, adopt, liberica,...)
        default: "temurin"
        required: false
        type: string
    secrets:
      NEXUS_USERNAME:
        required: true
      NEXUS_PASSWORD:
        required: true
      SWF_TOKEN:
        required: false
env: 
  SETTINGS_XML_URL: 'http://storage.exoplatform.org/public/githubci/maven-settings.xml'
  is_fork: ${{ github.event.pull_request.head.repo.fork }}
  base_branch_name: ${{ github.event.pull_request.base.ref }}
  repo_name: ${{ github.event.repository.name }}
  clone_url: ${{ github.event.pull_request.head.repo.clone_url }}
  pull_number: ${{ github.event.pull_request.number }}
  gh_token: ${{ secrets.SWF_TOKEN }}
jobs:
  build-ci:
    name: CI Build
    runs-on: ubuntu-latest
    timeout-minutes: 120
    permissions:
      pull-requests: write
    steps:
      - name: Check Github Token
        run: | 
          if [ -z "${gh_token}" ]; then 
            echo "gh_token=${{ github.token }}" >> $GITHUB_ENV
          fi
      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 512
          swap-size-mb: 1024
          remove-dotnet: 'true'
      - name: Checkout repository
        uses: actions/checkout@v3
        with: 
          fetch-depth: 0
          token: ${{ env.gh_token }}
      - name: Analyse Pull Request Changes
        id: analyse-pr
        env: 
          GH_TOKEN: ${{ env.gh_token }}
        run: |
          echo "partialmodules=" >> $GITHUB_OUTPUT
          if [ "${is_fork}" = "true" ]; then 
            echo "❌ Partial Build for forked repositories is not yet supported! Performing full build ..."
            exit 0
          fi
          baseBranchSha=$(git rev-parse origin/${base_branch_name})
          mergebaseSha=$(git merge-base origin/${base_branch_name} HEAD)
          if [ ! "${baseBranchSha}" = "${mergebaseSha}" ]; then 
            echo "❌ Branch is diverged! Please update the branch! Performing full build ..."
            exit 0
          fi
          if [ ! -z "$(gh pr view ${pull_number} --json labels --repo ${clone_url} | jq -r '.labels[].name' 2>/dev/null | grep fullCIBuild)" ]; then 
            echo "✅ Partial Build is disabled by fullCIBuild label! Performing full build ..."
            exit 0
          fi
          echo "Looking for frontend modules..."
          frontendModules=$(find -name pom.xml | while read pomfile; do 
            if grep -qi '<packaging>war</packaging>' $pomfile; then 
              dirname $pomfile | sed -E 's|^\.\/||g'
            fi
          done | xargs)
          if [ -z "${frontendModules}" ]; then 
            echo "✅ No Frontend modules detected! Performing full build ..."
            exit 0
          fi
          echo -e "✅ Frontend Modules are ${frontendModules}"
          echo "Changed files are:"
          git diff --name-only origin/${base_branch_name} HEAD
          files=$(git diff --name-only origin/${base_branch_name} HEAD | grep -Pv '^\.github' | xargs)
          echo
          echo "Checking if all changed files belong to frontend submodules for partial build eligibility..."
          modulestoBuild=""
          for file in $files; do
            notfound=true
            for module in $frontendModules; do 
              if echo "$file" | grep -qP "^${module}"; then
                modulestoBuild="$(echo ${modulestoBuild} ${module} | xargs)"
                notfound=false
                break
              fi
            done
            if $notfound; then 
              echo "❌ Changed file $file does not belong to frontend modules. Performing full build..."
              exit 0
            fi   
          done
          if [ -z "${modulestoBuild}" ]; then 
            echo "✅ No Frontend modules to build detected! Performing full build ..."
            exit 0
          fi
          # Remove duplicates
          modulestoBuild=$(printf '%s\n' $modulestoBuild | sort -u | xargs | sed 's/ /,/g')
          echo -e "Frontend Modules to build are ${modulestoBuild}"
          echo "partialmodules=${modulestoBuild}" >> $GITHUB_OUTPUT
      - name: Set up JDK ${{ inputs.jdk_major_version }}
        uses: actions/setup-java@v3
        with:
          java-version: ${{ inputs.jdk_major_version }}
          distribution: ${{ inputs.jdk_distribution }}
      - name: Set up Maven ${{ inputs.maven_version }}
        uses: stCarolas/setup-maven@v4.5
        with:
          maven-version: ${{ inputs.maven_version }}
      - name: Cache Maven artifacts
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2-repository
      - name: Prepare environment 
        run: |
          mkdir -p ~/.m2
          wget -q "${SETTINGS_XML_URL}" -O ~/.m2/settings.xml
      - name: Update PR labels 
        env:
          MAVEN_SUBMODULES: ${{ steps.analyse-pr.outputs.partialmodules }}
          GH_TOKEN: ${{ env.gh_token }}
        run: |
          if [ ! -z "${MAVEN_SUBMODULES:-}" ]; then
            gh pr edit ${pull_number} --add-label partialCIBuild --repo ${clone_url} || true 
          else 
            gh pr edit ${pull_number} --remove-label partialCIBuild --repo ${clone_url} || true
          fi
      - name: Build module
        env:
          MAVEN_OPTS: ${{ inputs.extra_maven_opts }}
          NEXUS_USERNAME: ${{ secrets.NEXUS_USERNAME }}
          NEXUS_PASSWORD: ${{ secrets.NEXUS_PASSWORD }}
          MAVEN_SUBMODULES: ${{ steps.analyse-pr.outputs.partialmodules }}
        run: | 
          MAVEN_SUBMODULES_ARGS=""
          if [ ! -z "${MAVEN_SUBMODULES:-}" ]; then
            MAVEN_SUBMODULES_ARGS="-pl $(echo ${MAVEN_SUBMODULES} | sed 's/,/ -pl /g')"
          fi
          mvn -B clean install -P${{ inputs.maven_profiles }} -Dmaven.artifact.threads=20 ${MAVEN_SUBMODULES_ARGS}
